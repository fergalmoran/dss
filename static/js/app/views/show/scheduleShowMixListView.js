// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['app', 'vent', 'marionette', 'fullcalendar', 'models/show/showCollection', 'models/mix/mixCollection', 'text!/tpl/ShowScheduleMixItem'], function(App, vent, Marionette, fullcalendar, ScheduleCollection, MixCollection, Template) {
    var ScheduleShowMixItem, ScheduleShowMixList;
    ScheduleShowMixItem = (function(_super) {

      __extends(ScheduleShowMixItem, _super);

      function ScheduleShowMixItem() {
        return ScheduleShowMixItem.__super__.constructor.apply(this, arguments);
      }

      ScheduleShowMixItem.prototype.template = _.template(Template);

      return ScheduleShowMixItem;

    })(Marionette.ItemView);
    ScheduleShowMixList = (function(_super) {

      __extends(ScheduleShowMixList, _super);

      function ScheduleShowMixList() {
        return ScheduleShowMixList.__super__.constructor.apply(this, arguments);
      }

      ScheduleShowMixList.prototype.itemView = ScheduleShowMixItem;

      ScheduleShowMixList.prototype.initialize = function(options) {
        console.log("ScheduleShowMixList: initialize");
        return true;
      };

      ScheduleShowMixList.prototype.onShow = function() {
        return $("#external-events div.external-event").each(function() {
          $(this).draggable({
            zIndex: 999,
            revert: true,
            revertDuration: 0
          });
        });
      };

      true;

      return ScheduleShowMixList;

    })(Marionette.CollectionView);
    return ScheduleShowMixList;
  });

}).call(this);
